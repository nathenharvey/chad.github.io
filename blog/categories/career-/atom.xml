<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: career, | Chad Fowler]]></title>
  <link href="http://chadfowler.com/blog/categories/career-/atom.xml" rel="self"/>
  <link href="http://chadfowler.com/"/>
  <updated>2013-07-13T15:05:47+02:00</updated>
  <id>http://chadfowler.com/</id>
  <author>
    <name><![CDATA[Chad Fowler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Re-thinking Software Development Education]]></title>
    <link href="http://chadfowler.com/blog/2011/12/21/re-thinking-software-development-education/"/>
    <updated>2011-12-21T00:00:00+01:00</updated>
    <id>http://chadfowler.com/blog/2011/12/21/re-thinking-software-development-education</id>
    <content type="html"><![CDATA[<p>Where have I been lately?  Good question. When asked over these past months, I jokingly say something like, "These last 8 months at LivingSocial have been the best 4 years of my career."</p>

<p>But I don't just mean I've been busy. I've been focused on building the best software development team I can to do what I think is some important and industry-changing work in the world of local commerce.</p>

<p>And when I joke about these 8 months being the best 4 years of my career, what I really mean is that I feel like I've learned 4 years worth of lessons and gained 4 years worth of experience. What we're doing isn't easy. It's the kind of work I've always sought out.</p>

<p>I am a self-taught software developer. To date, my formal education consists of two 3-day training classes on specific programming languages (Java many years ago and Erlang in 2008). During my first work experiences in IT, I remember the shock of discovering that a Masters degree in software development doesn't necessarily translate to knowing how to effectively use a computer. I was a saxophonist and system administrator and would regularly <em>teach</em> the computer scientists I worked with about things I would have assumed they learned in college.</p>

<p>As I headed further into the workforce I noticed another odd thing: people with tens of years of experience as software developers weren't necessarily very good at it. My assumptions were based on what I had previously learned as a jazz musician.  Jazz musicians polish and hone their skills throughout their careers. The longer a jazz musician has been playing, the more likely he or she is to be an excellent jazz musician.</p>

<p>Programmers, though. As far as I could tell the average programmer spent his day complaining about his co-workers and waiting for 5pm.</p>

<p>So what's the disconnect? Some of it, of course, is just the people. Some "programmers are passionate":http://pragprog.com/book/cfcar2/the-passionate-programmer and some aren't. Those that aren't, aren't going to be radically successful. Assuming this is the case in all fields, what's really frustrating to me is that I continue to run into passionate developers who just don't know the right stuff.</p>

<p>When I started out in this field, I was lucky enough to stumble onto a mentor. That too was probably informed by my experience as an aspiring jazz musician. Jazz musicians take the idea of musical lineage seriously and look for someone from whom to receive direction on how to parse the potentially overwhelming task of going from novice to master jazz improviser. My mentor in the software field did the same. He told me: first learn these three things. He picked topics that were diverse but complementary. He picked skills that set a foundation on which it was easy to build the next set. Most new developers don't get so lucky.</p>

<p>And It's not just technology skills. The developers I work with are entrepreneurs at heart.  We aren't sitting around polishing our tools and conducting thought experiments.  We're delivering stuff that matters and we hate working on projects that drag on or don't deliver value.  Becoming a great developer involves not just learning the ins and outs of software development but understanding how businesses work and exactly how software systems fit into that picture. It's about delivering value quickly and iteratively. Great developers understand what Kent Beck and the rest of the authors of the "agile manifesto":http://agilemanifesto.org/  were getting at a decade ago. And what people like "Eric Ries":http://www.startuplessonslearned.com/ are teaching today.</p>

<p>I've often thought "just give me 3 months with a smart person and I can have them running circles around the average developer." Have you thought that too? I know a lot of my colleagues have.</p>

<p>It's time to rethink how we educate software developers. Computers used to be huge scary machines in big white rooms that very few people touched. Today you probably have at least one computer ON YOUR BODY most of the time. They're ubiquitous and friendly and just NOT that hard to work with. The technology landscape has changed. The system of educating developers should change along with it.</p>

<p>My colleagues are clearly thinking along the same lines. I've seen speakers such as "Joe O'Brien":http://rubyhoedown.com/ talking about it this year.  And we see programs popping up all over.  Software Craftsman Ken Auer is launching the "Craftsmanship Academy":http://craftsmanshipacademy.com/ to teach apprentices the art and craft of software development in an intense hands-on residency-oriented program.  "Code Academy":http://codeacademy.org/ is a part-time 12 week course to accelerate the path to web development or design.</p>

<p>Today we're launching a new program at "LivingSocial":http://livingsocial.com called "Hungry Academy":http://hungryacademy.com.  Hungry Academy is a five month intense entrepreneurial immersion that will take raw, hungry talented programmers (and aspiring programmers!) and develop them into ultra-productive software engineers. Those that make it through to the end will be offered a position on our development team and paired with a mentor from LivingSocial's growing list of some of the "industry's most talented software engineers":http://twitter.com/#!/merbist/livingsocial.  Best of all, we will <em>pay</em> you to attend.  Your <em>job</em> for five months is to take your craft and career to the next level.</p>

<p>This isn't going to be easy. Some people will get in but won't make it to the end. Those that do will spend five months gaining the best 4 years of experience of their careers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Be Careful Of Who You Work With]]></title>
    <link href="http://chadfowler.com/blog/2011/02/24/be-careful-of-who-you-work-with/"/>
    <updated>2011-02-24T00:00:00+01:00</updated>
    <id>http://chadfowler.com/blog/2011/02/24/be-careful-of-who-you-work-with</id>
    <content type="html"><![CDATA[<p>You instinctively know that who you associate with matters a lot.  Our parents bring us up steering away and toward others who influence us.</p>

<p>But most of us don't realize just how much those around us influence us.</p>

<p>As I recall in the introduction to "The Passionate Programmer":http://pragprog.com/titles/cfcar2/the-passionate-programmer, there was one specific event that turned the tide for me.  I had been chugging along in my slightly-above-average corporate job and experiencing what I considered to be the height of success.  Then I had an intense period during which, for a few months, I had the opportunity to collaborate with a whole new level of software developers.  It all came to a head when I went to the eXtreme Programming Immersion that Object Mentor taught.  After a week surrounded by brilliant developers and leaders in the field, I knew I had to do something different.</p>

<p>I had to be as much like them as I could.</p>

<p>In The Passionate Programmer, I quote Pat Metheny's advice to young musicians: always be the worst musician in every band you're in.  As a musician and as a programmer, I've tried Pat's advice.  You play with a group of people better than you, and you'll almost always play better.</p>

<p>!http://farm4.static.flickr.com/3315/3613370192_30635de1cb_m.jpg!
http://www.flickr.com/photos/jazzuality/3613370192/</p>

<p>That's good anecdotal advice.  If you don't trust Pat, how about "Nicholas Christakis":http://christakis.med.harvard.edu/?  Nicholas is a social scientist at Harvard University.  Together with James Fowler of UC San Diego, his research focuses on how behavior and then even EMOTION spread through social networks.  Can behavior be epidemic?</p>

<p>Here are some things their research has shown to spread through social networks ilke disease:  "Obesity":http://www.nytimes.com/2007/07/25/health/25cnd-fat.html?_r=1&amp;scp=4&amp;sq=nicholas%20christakis&amp;st=cse), "Smoking":http://www.nejm.org/doi/full/10.1056/NEJMsa0706154, "Alcohol Consumption":http://www.annals.org/content/152/7/426.abstract, andâ€¦."HAPPINESS":http://www.bmj.com/content/337/bmj.a2338.full!  Yes, emotional state is contagious.</p>

<p>!http://farm1.static.flickr.com/48/165829023_8e97572f07_o.jpg!
http://www.flickr.com/photos/saintbob/165829023/</p>

<p>These aren't insignificant numbers, either.  For example, obesity chances increase 57% if you have a friend who is or becomes obese.  And, more disturbing than that, this is an effect that is conducted through more than one node in the social graph.  If your friends' friends' friends are obese, "you are 10% more likely to be obese":http://bit.ly/eOY1LP</p>

<p>If behavior spreads through social networks, then working in a toxic or slow-moving corporate environment is really really bad for you.  If you're a consultant, you MUST fire the clients that bring you down a notch and seek out clients that pull you up.  If you're a teacher, go where the students care about what they're learning.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automation and Outsourcing]]></title>
    <link href="http://chadfowler.com/blog/2011/02/18/automation-and-outsourcing/"/>
    <updated>2011-02-18T00:00:00+01:00</updated>
    <id>http://chadfowler.com/blog/2011/02/18/automation-and-outsourcing</id>
    <content type="html"><![CDATA[<p>What's the difference between automation and outsourcing?</p>

<p>I don't know if it's the same everywhere, but here in the USA we're deluged with fear-driven "news" reporting, decrying the theft or export of our jobs to low cost, less skilled, offshore labor.  Or even onshore "illegal" labor.  It might be Mexico. Or China. Or India.  In the 80s it was the Japanese. And it was robots and computers.</p>

<p>I'm not going to argue whether any of this is true or worth being upset about here.  "I've done it elsewhere.":http://pragprog.com/titles/cfcar2/the-passionate-programmer  What I'm interested in here is the question: what if, as individuals, instead of fearing outsourcing, offshoring, and automation, we decided to use it to our advantage?</p>

<p>The standard argument against offshore outsourcing goes like this:  Offshore people don't understand the work, or the culture, or don't care about quality or just aren't as good.  They might be cheaper by the hour, but they're more expensive in the long run.</p>

<p>OK.  That's a hard one to disprove.  It's also kind of hard to prove.  Regardless, hold that thought</p>

<p>!http://farm1.static.flickr.com/16/21042744_0640512665.jpg!
http://www.flickr.com/photos/dancoulter/21042744/</p>

<p>In this day and age, we've collectively gotten over the fear that computers will replace us all.  We're used to the idea that certain tasks can and should be automated.  For the younger readers, did you know that there was such thing as a spreadsheet before computer existed?  That's right.  It was roughly the same except a <em>person</em> had to calculate each value!  And if any numbers changed, guess what happened?  Someone had to recalculate them!</p>

<p>Anybody want that job?  I didn't think so.</p>

<p>So that's automation.  If you think <em>really</em> hard about what you do every day, I bet you can come up with a few things that could be automated so you wouldn't have to do them anymore.  You wouldn't feel bad about those things.  You'd be saving yourself time and saving your employers money if you could automate them.  Software developers spend their careers doing this for others.</p>

<p>Anything that could be done by a computer or a robot (roughly) just as well as it could be done by a human should be automated.  That frees the people up to <em>think</em>.  That's what we want, ya?  Hurray!</p>

<p>Some tasks are almost automate-able.  But they just need that little extra push.  For example, human language is hard to parse.  It's not exact enough to write reliable programs (usually) to read and act on.  So what do you do with those tasks that seem mundane enough to automate but can't actually be done without a human?</p>

<p>Outsource!</p>

<p>Outsourcing might mean giving the task to a more junior person you already work with. It might mean hiring someone on another continent who costs a fraction per hour than you do and can be trained to do the mundane work you do.  It might mean taking on "an apprentice":http://oreilly.com/catalog/9780596518387 and teaching them as they handle the "easy" stuff.</p>

<p>But, the fact of the matter is, in the work that most of us do every day there are things we could have someone less experienced do for us. And if that person is happy to do it, benefits from it in some way, costs less than we do, or is just <em>willing</em> when we are not, it's not a bad thing to try.</p>

<p>If you continually do things that are "below your pay grade", you're wasting precious time or money.</p>

<p>At the end of the day today, think about what you did today.  Given a little time, how much of it could have been automated?</p>

<p>Given a little time to document what needed to be done, how much of it could have been done just as well by someone else who is maybe less skilled or less expensive than you?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[McDonalds, Six Sigma, and Offshore Outsourcing (notes)]]></title>
    <link href="http://chadfowler.com/blog/2011/02/10/mcdonalds-six-sigma-and-offshore-outsourcing-notes/"/>
    <updated>2011-02-10T00:00:00+01:00</updated>
    <id>http://chadfowler.com/blog/2011/02/10/mcdonalds-six-sigma-and-offshore-outsourcing-notes</id>
    <content type="html"><![CDATA[<p>
These are notes from a talk I've given in various forms at "SCNA":http://scna.softwarecraftsmanship.org/, "CodeMash":http://codemash.org, and "Magic Ruby":http://magic-ruby.com.  I've mirrored them here from the "InfoEther weblog":http://infoether.com.

<p>

<img src="http://lh4.ggpht.com/_TVhFMT7oEd0/TLvjzmOWODI/AAAAAAAAKJ8/pR4oKLszOWE/0131.jpg" style='width:300px'/><br/>Me at SCNA<br/>Photo credit: <a href="http://picasaweb.google.com/jangdiafoto/SoftwareCraftsmanshipNorthAmerica20101016#5529263443100973106">Monty Ksycki</a>
<br/>
<p>
    
The presentation is called "McDonalds, Six Sigma, and Offshore Outsourcing - Unexpected Sources of Insight".  Here's the abstract:
</p>

<blockquote>
    We software developers like to think of what we do as an art form (or a craft, if you're at this conference). I was once asked to come up with a set of guidelines for creating great software so our (huge) company could more effectively use an offshore development team that had been delivering amorphous piles of crummy, nonworking code. I was frustrated and responded with something like this: "Give me a list of guidelines for how to make a beautiful song!" The nerve! Repeatable processes? Who did she think she was talking to?! This is a creative process! This is ART!!!! 
</blockquote>
<blockquote>
    
    I've since grown up a bit and I'd like to talk about how I was wrong and how we can all hopefully learn from my mistakes.
</blockquote>
<img src="http://chadfowler.com/art-commodity-continuum.png" style='width:400px'/><br/>The Art-Craft-Commodity Continuum (from my presentation)
<br/>

<p>
    
  In it, I tell the story of my experiences with the Six Sigma quality methodology and with offshore outsourcing, urging developers not to blindly write off potentially useful software development strategies based on hearsay and misunderstanding. I also propose a customer-driven, data-driven approach to software engineering, dovetailing off of InfoEther's Chief Scientist, <a href="http://www.vanderburg.org/blog">Glenn Vanderburg's</a> recent ruminations on <a href="http://confreaks.net/videos/282-lsrc2010-real-software-engineering">"Real Software Engineering"</a>.
</p>
    <a href="http://en.wikipedia.org/wiki/File:Originalronaldmcdonald.jpg"><img  style='width:300px' src="http://upload.wikimedia.org/wikipedia/en/9/91/Originalronaldmcdonald.jpg" alt="The original, scary Ronald McDonald"/></a><br/>The original <a href="http://en.wikipedia.org/wiki/Ronald_McDonald">Ronald McDonald</a> (Willard Scott)
<p>
  Videos from SCNA will be posted on <a href="http://www.infoq.com/">InfoQ</a> eventually, and I'll link mine here when that happens. In the mean time, many people asked me for pointers to some of the books and resources I mentioned during my presentation.  Here's a link dump that you might find useful:
</p>

<ul>
  <li>
    <a href="http://www.amazon.com/Mustang-Sally-LP-Version/dp/B00124HFII/ref=sr_1_1?ie=UTF8&qid=1287442362&sr=8-1">Wilson Pickett's Mustang Sally</a>
  </li>
  <li>
    <a href="http://www.amazon.com/Zen-Art-Motorcycle-Maintenance-Inquiry/dp/0061673730/ref=sr_1_1?s=books&ie=UTF8&qid=1287442054&sr=1-1">Zen and the Art of Motorcycle Maintenance: An Inquiry into Values</a>
  </li> 
  <li>
    <a href="http://www.amazon.com/E-Myth-Revisited-Small-Businesses-About/dp/0887307280">The E-Myth Revisited: Why Most Small Businesses Don't Work and What to Do About It</a>
  </li>
  <li>
    <a href="http://vmgbpo.com">VMG BPO - Offshore business outsourcing</a>
  </li>
  <li>
    <a href="http://asksunday.com">Ask Sunday - Virtual Personal Assistants</a>
  </li>
  <li>
    <a href="http://glowtouch.com">GlowTouch - Low cost offshore IT outsourcing</a>
  </li>
  <li>
    <a href="http://en.wikipedia.org/wiki/Quality_function_deployment">Quality Function Deployment</a>
  </li>
  <li>
    <a href="http://isixsigma.com/">iSixSigma - Lots of six sigma info</a>
  </li>
  <li>
    <a href='http://www.sixsigmaonline.org/six-sigma-training-certification-information/articles/the-dmadv-methodology.html'>DMADV - the six sigma design process in a nutshell</a>
  </li>
  <li>
    <a href='http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612/ref=sr_1_1?ie=UTF8&qid=1287442512&sr=8-1'>Design Patterns: Elements of Reusable Object-Oriented Software</a>
  </li>
  <li>
    <a href="http://www.wiley.com/legacy/products/subject/business/forbes/kroc.pdf">Forbes article on Ray Kroc and the founding of the McDonalds chains</a>
  </li>
  <li>
    <a href="http://en.wikipedia.org/wiki/John_Zorn">John Zorn - Avant Garde saxophonist</a>
  </li>
  <li>
    <a href="http://www.paulsmith.co.uk/">Paul Smith - Fashion designer</a>
  </li>
  <li>
    <a href="http://en.wikipedia.org/wiki/Mark_Rothko">Mark Rothko - Abstract Expressionist painter</a>
  </li>
  <li>
    <a href="http://yankov.us/rage">Rage comic generator</a>
  </li>

  <li>
    <a href="http://gist.github.com/612263">Ugly Kitty Server code by me and Anthony Burns</a>
  </li>
  <li>
    <a href="http://chadfowler.com:4567">Ugly Kitty Server in action</a>
  </li>
  <li>
    <a href="http://en.wikipedia.org/wiki/I_know_it_when_I_see_it">The "I know it when I see it" Supreme Court case</a>
  </li>
  <li>
    <a href="http://en.wikipedia.org/wiki/Alhazen">Ibn Al-Haytham - inventor of the scientific method</a>
  </li>
  <li>
    <a href="http://www.zazzle.com/tdd+gifts">TDD T-Shirts</a>
  </li>
  <li>
    <a href="http://www.extremeprogramming.org/map/project.html">Extreme Programming flow chart</a>
  </li>
  <li>
    <a href="http://www.richdad.com/default.aspx">Rich Dad - Poor Dad</a>
  </li>
  <li>
      <a href="http://www.keavy.co.uk/">Keavy McMinn's webblog on Ironman etc.</a>
  <li>
    <a href="http://www.pragprog.com/titles/cfcar2/the-passionate-programmer">The Passionate Programmer - My book</a>
    </li>
  <li>
    <a href="http://www.fourhourworkweek.com/">The 4-Hour Work Week</a>
  </li>
  <li>
    <a href="http://en.wikipedia.org/wiki/The_Turk">The Mechanical Turk</a>
  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dead-End Jobs: Are You Suffering From Stockholm Syndrome? ]]></title>
    <link href="http://chadfowler.com/blog/2010/12/30/dead-end-jobs-are-you-suffering-from-stockholm-syndrome/"/>
    <updated>2010-12-30T00:00:00+01:00</updated>
    <id>http://chadfowler.com/blog/2010/12/30/dead-end-jobs-are-you-suffering-from-stockholm-syndrome</id>
    <content type="html"><![CDATA[<p>Have you heard of Stockholm Syndrome? It's a name given to the condition wherein hostages develop positive feelings toward their captors despite being held in negative, unfavorable and even life-threatening conditions.  Victims of Stockholm Syndrome will even inexplicably stay with their captors even when given the chance at freedom.</p>

<p>Hopefully nobody reading this is literally being held hostage right now. If you are, good luck!</p>

<p>For the rest of you, why might I suggest that you are suffering from Stockholm Syndrome? Because employment relationships can manifest themselves in this very way.</p>

<p>In the article, "Love and Stockholm Syndrome: The Mystery of Loving an Abuser":http://drjoecarver.makeswebsites.com/clients/49355/File/love_and_stockholm_syndrome.html, Dr. Joseph Carver says that the following four situations serve as a foundation for the development of Stockholm Syndrome:</p>

<p>&lt;quote&gt;</p>

<ul>
<li>The presence of a perceived threat to oneÃ¢â‚¬â„¢s physical or psychological survival and the belief that the abuser would carry out the threat.</li>
<li>The presence of a perceived small kindness from the abuser to the victim</li>
<li>Isolation from perspectives other than those of the abuser</li>
<li>The perceived inability to escape the situation</li>
</ul>


<p>&lt;/quote&gt;</p>

<p>Looking back at my own career (specifically some of the extremely intelligent people I've met who are stagnating in oppressive companies or positions) I have recognized that many of these people (and sometimes myself) have felt "stuck" for no obvious reason. Some people seem just plain crazy when you look at their skill sets, ability, and the low quality of work or environment they're willing to put up with.</p>

<p>So I contacted Joseph Carver to ask his opinion. Could this be Stockholm Syndrome?  He agreed. In email, he said "SS is most likely to develop when the employee feels trapped, perhaps by a high salary, fear of losing a career, or fear of humiliation."  So let's look at his four conditions:</p>

<p>h2. Perceived threat:</p>

<p>Getting fired, being humiliated, not being a "top 20%" employee, not getting a raise. Employers wield a lot of perceived power over employees, especially for those in very traditional corporate jobs.  The employer <em>must</em> be willing to carry out the threat. Every business is under the right conditions. It's how businesses work.</p>

<p>h2. Small kindness</p>

<p>Got a Christmas bonus once when you really needed it? Make a competitive salary? Great benefits? Get to work on a technology you don't think you'd be able to work on elsewhere?  There ya go.</p>

<p>h2. Isolation from other perspectives</p>

<p>Again, a big corporate environment is <em>ripe</em> for this kind of isolation.  If you work for BigCo, you learn to do things The BigCo way.  The company's organizational structure becomes a blueprint for your career progression.  You start to lose sight of what industry pay and incentives look like since you have a homogeneous population to compare with. Unfortunately, from what I've seen even the <em>best</em> run companies create this kind of isolation of perspective and group-think. Charismatic leaders are particularly capable of creating a culture vacuum around a cult of personality.</p>

<p>h2. Perceived inability to escape</p>

<p>According to the Bureau of Labor statistics, American adults "spend by far more time working than any other activity.":http://www.bls.gov/news.release/atus.htm  That's a <em>lot</em> of your waking time being trapped in a routine. In a Stockholm Syndrome situation, the captor chips away at the self-esteem of the captive. So for most of our waking hours, those of us trapped in dead end jobs like these are exposed to environments which systematically destroy our self-confidence.  Not only that, a persistent fear and feeling of failure makes it harder to actually explore the options for leaving the bad situation. The instinctive self-preservation reaction in this kind of situation is to work <em>harder</em> to try to avoid the perceived threat coming to fruition.</p>

<hr />

<p>So, what if this describes your job?  You owe it to yourself to find a way out. Hopefully recognizing the signs will show you that the <em>real</em> situation is far less grim than you might believe and that you have control over how you choose to spend the <em>majority</em> of your adult life.</p>

<p>I'm writing this for the many people I've met (and the countless I haven't) that are senselessly stuck in bad job situations. Please stop wasting your precious time.</p>
]]></content>
  </entry>
  
</feed>
